0-add_integer.py
================

This module defines an integer addition function `add_integer(a, b=98)`

Usage
=====

The function `add_integer(...)` returns the addition of its two arguments a and b.

Examples:
---------

>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(0, 0)
0
>>> add_integer(15, 0)
15
>>> add_integer(0, 15)
15
>>> add_integer(2.0, 3.0)
5
>>> add_integer(-2, 2)
0
>>> add_integer(-2.9, -0.2)
-2
>>> add_integer(2, -2)
0
>>> add_integer(2)
100

Non number:
===========

The function arguments a and b are either integers or floats.
If either argument is a non-integer and non-float, a `TypeError` is raised.

Examples:
---------

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer('a', 'b')
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer('a', 2)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer('a')
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(2, 'b')
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer(float('inf'), 0)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer(0, float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
